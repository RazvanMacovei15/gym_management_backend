# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Maven Build Check

# Controls when the action will run
on:
  pull_request:
    branches:
      - master  # Or your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up JDK 23 (or another version if your project requires it)
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'oracle'
        java-version: '21'

    # Cache Maven dependencies to improve build time
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Run the Maven build command
    - name: Build with Maven
      run: mvn clean install

    # Optionally, run your tests as part of the build
    # - name: Run tests
    #  run: mvn test
    
    - name: set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/docker-ci-workflow:latest

    - name: Run sshpass commands
      uses: matheusvanzan/sshpass-action@v2
      with:
        host: ${{ secrets.SSH_HOST }}
        user: ${{ secrets.SSH_USERNAME }}
        pass: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT}}
        run: test2.bat


